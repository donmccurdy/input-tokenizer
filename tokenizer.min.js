(function(e){var t=function(t,n){var r,i,s,o=e.extend({xContent:"Ã—",namespace:"tknz",label:"Tags:",separators:[","," ","."],callback:null},n);var u,a,f,l,c,h,p,d,v;u=function(){r=t;a();f()};a=function(){var t=o.namespace;i=e('<div class="'+t+'-list"></div>');s=r.addClass(t+"-input").wrap('<div class="'+t+'-wrapper"></div>').parent().prepend(i).prepend('<span class="'+t+'-wrapper-label">'+o.label+"</span>")};f=function(){var t=o.namespace;s.on("focus."+t,"input",function(){s.addClass(t+"-focus")}).on("blur."+t,"input",function(){s.removeClass(t+"-focus");if(r.val()){l(r.val());r.val("");v()}}).on("keydown."+t,"input",function(){if(event.which===8&&!r.val()){c();v()}}).on("keypress."+t,"input",function(e){var t=r.val();if(o.separators.indexOf(String.fromCharCode(e.which))>-1||e.which===13){e.preventDefault();if(t){l(t);v()}r.val("")}}).on("click."+t,function(){r.focus()}).on("click."+t,"."+t+"-token-x",function(){e(this).closest("."+t+"-token").remove();v()})};l=function(e){var t=o.namespace,n='<div class="'+t+'-token" data-token="'+e+'">'+'<span class="'+t+'-token-label">'+e.trim()+"</span>"+'<span class="'+t+'-token-x">'+o.xContent+"</span>"+"</div>";i.append(n);return r};c=function(){return i.children().last().detach().data("token")||null};p=function(){i.empty();return r};h=function(){var e,t=[],n=i.children();for(e=0;e<n.length;e++){t.push(n.eq(e).data("token").toString())}return t};d=function(){s.after(r).remove();return r.removeClass(o.namespace+"-input")};v=function(){(o.callback||e.noop)(r);return r};u(t);return{push:l,pop:c,empty:p,get:h,destroy:d,callback:v}};var n={init:function(n){if(this[0].nodeName!=="INPUT"){e.error('Tokenizer must be set up with an <input type="text"> tag.');return this}return this.data("tokenizer",t(this,n))},push:function(e){return this.data("tokenizer").push(e)},pop:function(){return this.data("tokenizer").pop()},empty:function(e){return this.data("tokenizer").empty()},get:function(){return this.data("tokenizer").get()},destroy:function(){return this.data("tokenizer").destroy()},callback:function(){return this.data("tokenizer").callback()}};e.fn.tokenizer=function(t){if(n[t]){if(!this.data("tokenizer")){e.error('Cannot call method "'+t+'" - Tokenizer has not been initialized on this input.')}return n[t].apply(this,Array.prototype.slice.call(arguments,1))}else if(typeof t==="object"||!t){return n.init.apply(this,arguments)}else{e.error("Method "+t+" does not exist on jQuery.tokenizer")}}})(jQuery)
